openapi: 3.0.3
info:
  title: VascoBank
  description: |-
    API do servico de gerenciar usu√°rios. 

  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: account
    description: Everything about your Pets
    
paths:
  /account:
    get:
      tags:
        - account
      summary: Lista todas as contas
      description: Lista todas as contas
      operationId: account
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'          
  /account/{accountId}:
    get:
      summary: Mostra dados de uma conta especifica com base no id
      tags:
        - account
      parameters:
        - name: accountId
          in: path
          description: ID of account to return
          required: true

          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Account'
    post:
      summary: Cria uma nova conta
      tags:
        - account
      requestBody:
        description: Campos para criar uma conta
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '201':
          summary: Conta criada
          description: Conta criada com sucesso

    patch:
      summary: Atualiza uma conta com base no id
      tags:
        - account
      parameters:
        - name: accountId
          in: path
          description: ID of account to return
          required: true
          schema:
            type: integer

      requestBody: 
        description: Campos a serem atualizados em conta
        required: True
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdate'
      responses:
        '200':
          summary: Account updated
          description: Edited with success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Account'


    delete:
      tags:
        - account
      parameters:
        - name: accountId
          in: path
          description: ID da conta a ser desativada (Soft Delete)
          required: true

          schema:
            type: integer
      responses:
        '200':
          description: Conta desativada com sucesso
          content:
            application/json:
              schema:

components:
  requestBodies:
    CreateAccount:
      description: JSON contendo informacoes da conta a ser criada
      required: true
      content:
        application/json:
          schema:
            $ref: '/Account'

  schemas:
    Account:
      type: object
      required: [nome, enderecos, celular, email, cpf, rg, ocupacao, rendaMensal, nomeDaMae]
      properties:
        id:
          type: integer
          format: int64
          example: 1234
        nome:
          type: string
          example: Joaquim
        enderecos:
          type: array
          xml:
            name: enderecos
            wrapped: true
          items:
            $ref: '#/components/schemas/Endereco'
        celular:
          type: string
          example: +5511999999999
        email:
          type: string
          example: "test@vascob.com"
        cpf:
          type: string
          example: "851.625.090-35"
        rg:
          type: string
          example: 48.774.042-7
        ocupacao:
          type: string
          example: Developer
        rendaMensal:
          type: integer
          format: int64
          example: 100000
        nomeDaMae:
          type: string
          example: Maria


    AccountUpdate:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1234
        nome:
          type: string
          example: Joaquim
        enderecos:
          type: array
          xml:
            name: enderecos
            wrapped: true
          items:
            $ref: '#/components/schemas/Endereco'
        celular:
          type: string
          example: +5511999999999
        email:
          type: string
          example: "test@vascob.com"
        cpf:
          type: string
          example: "851.625.090-35"
        rg:
          type: string
          example: 48.774.042-7
        ocupacao:
          type: string
          example: Developer
        rendaMensal:
          type: integer
          format: int64
          example: 100000
        nomeDaMae:
          type: string

    Endereco:
      type: object
      properties:
        logradouro:
          type: string
          example: 437 Lytton
        cidade:
          type: string
          example: Palo Alto
        estado:
          type: string
          example: CA
        cep:
          type: string
          example: '94301'
